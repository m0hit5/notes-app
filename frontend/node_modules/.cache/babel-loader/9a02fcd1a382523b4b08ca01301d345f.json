{"ast":null,"code":"import _objectSpread from\"C:/Users/MOHIT/Desktop/3-Django+React App/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/MOHIT/Desktop/3-Django+React App/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/MOHIT/Desktop/3-Django+React App/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/MOHIT/Desktop/3-Django+React App/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{ReactComponent as ArrowLeft}from\"@svgr/webpack?-svgo,+titleProp,+ref!../assets/arrow-left.svg\";import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NotePage=function NotePage(_ref){var match=_ref.match,history=_ref.history;var noteId=match.params.id;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];useEffect(function(){getNote();},[noteId]);var getNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(noteId==='new')){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return fetch(\"/api/notes/\".concat(noteId,\"/\"));case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;setNote(data);case 9:case\"end\":return _context.stop();}}},_callee);}));return function getNote(){return _ref2.apply(this,arguments);};}();var createNote=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:fetch(\"/api/notes/\",{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify(note)});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function createNote(){return _ref3.apply(this,arguments);};}();var updateNote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:fetch(\"/api/notes/\".concat(noteId,\"/\"),{method:\"PUT\",headers:{'Content-Type':'application/json'},body:JSON.stringify(note)});case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function updateNote(){return _ref4.apply(this,arguments);};}();var deleteNote=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:fetch(\"/api/notes/\".concat(noteId,\"/\"),{method:'DELETE',headers:{'Content-Type':'application/json'}}).then(function(){history.push('/');window.location.reload();// Refresh the home page\n}).catch(function(error){console.error('Error deleting note:',error);});case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function deleteNote(){return _ref5.apply(this,arguments);};}();var handleSubmit=function handleSubmit(){console.log('NOTE:',note);if(noteId!=='new'&&note.body===''){deleteNote();}else if(noteId!=='new'){updateNote();}else if(noteId==='new'&&note.body!==null){createNote();}history.push('/');};var handleChange=function handleChange(value){setNote(function(note){return _objectSpread(_objectSpread({},note),{},{'body':value});});console.log('Handle Change:',note);};return/*#__PURE__*/_jsxs(\"div\",{className:\"note\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"note-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(ArrowLeft,{onClick:handleSubmit})}),noteId!=='new'?/*#__PURE__*/_jsx(\"button\",{onClick:deleteNote,children:\"Delete\"}):/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Done\"})]}),/*#__PURE__*/_jsx(\"textarea\",{onChange:function onChange(e){handleChange(e.target.value);},value:note===null||note===void 0?void 0:note.body})]});};export default NotePage;","map":{"version":3,"sources":["C:/Users/MOHIT/Desktop/3-Django+React App/frontend/src/pages/NotePage.js"],"names":["React","useState","useEffect","Link","NotePage","match","history","noteId","params","id","note","setNote","getNote","fetch","response","json","data","createNote","method","headers","body","JSON","stringify","updateNote","deleteNote","then","push","window","location","reload","catch","error","console","handleSubmit","log","handleChange","value","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\nimport { Link } from 'react-router-dom'\n\nconst NotePage = ({ match, history }) => {\n\n    let noteId = match.params.id\nlet [note, setNote] = useState(null)\n\nuseEffect(() => {\n    getNote()\n}, [noteId])\n\n\nlet getNote = async () => {\n    if (noteId === 'new') return\n\n    let response = await fetch(`/api/notes/${noteId}/`)\n    let data = await response.json()\n    setNote(data)\n}\n\nlet createNote = async () => {\n    fetch(`/api/notes/`, {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(note)\n    })\n}\n\nlet updateNote = async () => {\n    fetch(`/api/notes/${noteId}/`, {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(note)\n    })\n}\n\nlet deleteNote = async () => {\n    fetch(`/api/notes/${noteId}/`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(() => {\n        history.push('/')\n        window.location.reload() // Refresh the home page\n    })\n    .catch(error => {\n        console.error('Error deleting note:', error)\n    })\n}\n\nlet handleSubmit = () => {\n    console.log('NOTE:', note)\n    if (noteId !== 'new' && note.body === '') {\n        deleteNote()\n    } else if (noteId !== 'new') {\n        updateNote()\n    } else if (noteId === 'new' && note.body !== null) {\n        createNote()\n    }\n    history.push('/')\n}\n\nlet handleChange = (value) => {\n    setNote(note => ({ ...note, 'body': value }))\n    console.log('Handle Change:', note)\n}\n\nreturn (\n    <div className=\"note\">\n        <div className=\"note-header\">\n            <h3>\n                <ArrowLeft onClick={handleSubmit} />\n            </h3>\n            {noteId !== 'new' ? (\n                <button onClick={deleteNote}>Delete</button>\n            ) : (\n                <button onClick={handleSubmit}>Done</button>\n            )}\n\n        </div>\n        <textarea onChange={(e) => { handleChange(e.target.value) }} value={note?.body}></textarea>\n    </div>\n)\n}\n\nexport default NotePage\n"]},"metadata":{},"sourceType":"module"}