{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOHIT\\\\Desktop\\\\3-Django+React App\\\\frontend\\\\src\\\\pages\\\\NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ReactComponent as ArrowLeft } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/arrow-left.svg\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = ({\n  match,\n  history\n}) => {\n  _s();\n\n  let noteId = match.params.id;\n  const [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n\n  let getNote = async () => {\n    if (noteId === 'new') return;\n\n    try {\n      const response = await fetch(`/api/notes/${noteId}/`);\n      const data = await response.json();\n      setNote(data);\n    } catch (error) {\n      console.error('Error fetching note:', error);\n    }\n  };\n\n  let createNote = async () => {\n    try {\n      await fetch(`/api/notes/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(note)\n      });\n      refreshHomePage();\n    } catch (error) {\n      console.error('Error creating note:', error);\n    }\n  };\n\n  let updateNote = async () => {\n    try {\n      await fetch(`/api/notes/${noteId}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(note)\n      });\n      refreshHomePage();\n    } catch (error) {\n      console.error('Error updating note:', error);\n    }\n  };\n\n  let deleteNote = async () => {\n    try {\n      await fetch(`/api/notes/${noteId}/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      refreshHomePage();\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n\n  let handleSubmit = () => {\n    console.log('NOTE:', note);\n\n    if (noteId !== 'new' && note.body === '') {\n      deleteNote();\n    } else if (noteId !== 'new') {\n      updateNote();\n    } else if (noteId === 'new' && note.body !== null) {\n      createNote();\n    }\n  };\n\n  let handleChange = value => {\n    setNote(note => ({ ...note,\n      'body': value\n    }));\n    console.log('Handle Change:', note);\n  };\n\n  let refreshHomePage = () => {\n    history.push('/');\n    window.location.reload(); // Refresh the home page\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), noteId !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        handleChange(e.target.value);\n      },\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotePage, \"k41NuHLtMLNqVoRGkWqAFGkbS8Y=\");\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"sources":["C:/Users/MOHIT/Desktop/3-Django+React App/frontend/src/pages/NotePage.js"],"names":["React","useState","useEffect","Link","NotePage","match","history","noteId","params","id","note","setNote","getNote","response","fetch","data","json","error","console","createNote","method","headers","body","JSON","stringify","refreshHomePage","updateNote","deleteNote","handleSubmit","log","handleChange","value","push","window","location","reload","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\nimport { Link } from 'react-router-dom'\n\nconst NotePage = ({ match, history }) => {\n  let noteId = match.params.id\n  const [note, setNote] = useState(null)\n\n  useEffect(() => {\n    getNote()\n  }, [noteId])\n\n  let getNote = async () => {\n    if (noteId === 'new') return\n\n    try {\n      const response = await fetch(`/api/notes/${noteId}/`)\n      const data = await response.json()\n      setNote(data)\n    } catch (error) {\n      console.error('Error fetching note:', error)\n    }\n  }\n\n  let createNote = async () => {\n    try {\n      await fetch(`/api/notes/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(note),\n      })\n      refreshHomePage()\n    } catch (error) {\n      console.error('Error creating note:', error)\n    }\n  }\n\n  let updateNote = async () => {\n    try {\n      await fetch(`/api/notes/${noteId}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(note),\n      })\n      refreshHomePage()\n    } catch (error) {\n      console.error('Error updating note:', error)\n    }\n  }\n\n  let deleteNote = async () => {\n    try {\n      await fetch(`/api/notes/${noteId}/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      refreshHomePage()\n    } catch (error) {\n      console.error('Error deleting note:', error)\n    }\n  }\n\n  let handleSubmit = () => {\n    console.log('NOTE:', note)\n    if (noteId !== 'new' && note.body === '') {\n      deleteNote()\n    } else if (noteId !== 'new') {\n      updateNote()\n    } else if (noteId === 'new' && note.body !== null) {\n      createNote()\n    }\n  }\n\n  let handleChange = (value) => {\n    setNote((note) => ({ ...note, 'body': value }))\n    console.log('Handle Change:', note)\n  }\n\n  let refreshHomePage = () => {\n    history.push('/')\n    window.location.reload() // Refresh the home page\n  }\n\n  return (\n    <div className=\"note\">\n      <div className=\"note-header\">\n        <h3>\n          <ArrowLeft onClick={handleSubmit} />\n        </h3>\n        {noteId !== 'new' ? (\n          <button onClick={deleteNote}>Delete</button>\n        ) : (\n          <button onClick={handleSubmit}>Done</button>\n        )}\n      </div>\n      <textarea onChange={(e) => { handleChange(e.target.value) }} value={note?.body}></textarea>\n    </div>\n  )\n}\n\nexport default NotePage\n"]},"metadata":{},"sourceType":"module"}