{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOHIT\\\\Desktop\\\\3-Django+React App\\\\frontend\\\\src\\\\components\\\\ListItem.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet getTime = note => {\n  return new Date(note.updated).toLocaleDateString();\n};\n\nlet getTitle = note => {\n  let title = note.body.split('\\n')[0];\n\n  if (title.length > 45) {\n    return title.slice(0, 45);\n  }\n\n  return title;\n};\n\nlet getContent = note => {\n  let title = getTitle(note);\n  let content = note.body.replaceAll('\\n', ' ');\n  content = content.replaceAll(title, '');\n\n  if (content.length > 45) {\n    return content.slice(0, 45) + '...';\n  } else {\n    return content;\n  }\n};\n\nconst ListItem = ({\n  note\n}) => {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/note/${note.id}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: getTitle(note)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: getTime(note)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this), getContent(note)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListItem;\nexport default ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["C:/Users/MOHIT/Desktop/3-Django+React App/frontend/src/components/ListItem.js"],"names":["React","Link","getTime","note","Date","updated","toLocaleDateString","getTitle","title","body","split","length","slice","getContent","content","replaceAll","ListItem","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,IAAIC,OAAO,GAAIC,IAAD,IAAU;AACpB,SAAO,IAAIC,IAAJ,CAASD,IAAI,CAACE,OAAd,EAAuBC,kBAAvB,EAAP;AACH,CAFD;;AAIA,IAAIC,QAAQ,GAAIJ,IAAD,IAAU;AAErB,MAAIK,KAAK,GAAGL,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgB,IAAhB,EAAsB,CAAtB,CAAZ;;AACA,MAAIF,KAAK,CAACG,MAAN,GAAe,EAAnB,EAAuB;AACnB,WAAOH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAP;AACH;;AACD,SAAOJ,KAAP;AACH,CAPD;;AAUA,IAAIK,UAAU,GAAIV,IAAD,IAAU;AACvB,MAAIK,KAAK,GAAGD,QAAQ,CAACJ,IAAD,CAApB;AACA,MAAIW,OAAO,GAAGX,IAAI,CAACM,IAAL,CAAUM,UAAV,CAAqB,IAArB,EAA2B,GAA3B,CAAd;AACAD,EAAAA,OAAO,GAAGA,OAAO,CAACC,UAAR,CAAmBP,KAAnB,EAA0B,EAA1B,CAAV;;AAEA,MAAIM,OAAO,CAACH,MAAR,GAAiB,EAArB,EAAyB;AACrB,WAAOG,OAAO,CAACF,KAAR,CAAc,CAAd,EAAiB,EAAjB,IAAuB,KAA9B;AACH,GAFD,MAEO;AACH,WAAOE,OAAP;AACH;AACJ,CAVD;;AAaA,MAAME,QAAQ,GAAG,CAAC;AAAEb,EAAAA;AAAF,CAAD,KAAc;AAC3B,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAG,SAAQA,IAAI,CAACc,EAAG,EAA3B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAA,kBAAKV,QAAQ,CAACJ,IAAD;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAAG;AAAA,oBAAOD,OAAO,CAACC,IAAD;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAH,EAAgCU,UAAU,CAACV,IAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;KAAMa,Q;AAYN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nlet getTime = (note) => {\n    return new Date(note.updated).toLocaleDateString()\n}\n\nlet getTitle = (note) => {\n\n    let title = note.body.split('\\n')[0]\n    if (title.length > 45) {\n        return title.slice(0, 45)\n    }\n    return title\n}\n\n\nlet getContent = (note) => {\n    let title = getTitle(note)\n    let content = note.body.replaceAll('\\n', ' ')\n    content = content.replaceAll(title, '')\n\n    if (content.length > 45) {\n        return content.slice(0, 45) + '...'\n    } else {\n        return content\n    }\n}\n\n\nconst ListItem = ({ note }) => {\n    return (\n        <Link to={`/note/${note.id}`}>\n            <div className=\"notes-list-item\" >\n                <h3>{getTitle(note)}</h3>\n                <p><span>{getTime(note)}</span>{getContent(note)}</p>\n            </div>\n\n        </Link>\n    )\n}\n\nexport default ListItem\n"]},"metadata":{},"sourceType":"module"}